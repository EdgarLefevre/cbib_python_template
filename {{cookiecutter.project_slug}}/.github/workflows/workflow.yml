{% if cookiecutter.tests == "y" %}
name: Tests 
{% else %}
name: Linters
{% endif %}
on: [push, pull_request]
jobs:
  isort:
    name: Check imports order
    runs-on: ubuntu-latest
    steps: 
      - uses: actions/checkout@v3
      - name: Setup python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Run isort
        uses: isort/isort-action@master
        with:
          configuration: "."
      - uses: stefanzweifel/git-auto-commit-action@v4
        name: autocommit
        with:
          commit_message: ":construction_worker: Sort imports"
  black_formatter:
    name: Run Black formatter
    runs-on: ubuntu-latest
    needs: [isort]
    steps:
      - uses: actions/checkout@v2
      - name: Check files with black formatter
        uses: rickstaa/action-black@v1
        id: action_black
        with:
          black_args: "."
      - uses: stefanzweifel/git-auto-commit-action@v4
        name: autocommit
        with:
          commit_message: ":construction_worker: Automated Commit"
  flake8_linter:
    name: Flake8 linter
    runs-on: ubuntu-latest
    needs: [black_formatter]
    steps:
      - uses: actions/checkout@v3
      - name: Setup python environment.
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Pull modifications
        run: git pull
      - name: Check files with flake8 linter
        uses: py-actions/flake8@v2
        with:
          ignore: "F401"
          max-line-length: "100"
          path: "src" # tests ??
  mypy_type_check:
    name: MyPy type checking
    runs-on: ubuntu-latest
    needs: [flake8_linter]
    steps:
      - uses: actions/checkout@v3
      - name: Setup python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Pull Modifications
        run: git pull
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install mypy
      - name: MyPy
        run: |
          mypy src/
{% if cookiecutter.tests == "y"  %}
  tests:
    name: Run tests with PyTest library
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: {% raw %} ${{ matrix.os }} {% endraw %}
    needs: [black_formatter, flake8_linter, mypy_type_check]
    steps:
      - uses: actions/checkout@v3
      - name: Setup python 3.10
        uses: actions/setup-python@v3
        with: 
          python-version: "3.10"
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
      - name: Run tests
        run: |
          python -m pytest --cov=./ --cov-report=xml
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          token: {% raw %} ${{ secrets.CODECOV_TOKEN }} {% endraw %}
          directory: ./coverage/reports/
          env_vars: OS,PYTHON
          fail_ci_if_error: true
          files: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          verbose: true
{% endif %}
